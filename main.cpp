#include <iostream>
#include <iomanip>
#include <locale>
#include <codecvt>
#include <string>
#include <random>

using namespace std;

string EncryptText(string text) {
    string _encryptedmsg, EKey;
    string tmp = "";

    // generate random number (byteshift)
    random_device dev;
    mt19937 rng(dev());
    uniform_int_distribution<std::mt19937::result_type> dist6(1, 9); // generate number [1, 9]

    int byteshift = dist6(rng); // generate byteshift
    cout << "[DEBUG] generated byte shift: " << byteshift << std::endl; // cout byteshift

    for (char symbol : text) {
        if(symbol == ',' or symbol == '.' or symbol == ' '){
            tmp += symbol;
            continue;
        }

        // Convert the symbol to its UTF-32 representation
        wstring_convert<codecvt_utf8_utf16<char32_t>, char32_t> converter;
        u32string utf32 = converter.from_bytes(&symbol, &symbol + 1);

        // Convert the UTF-32 representation to UTF-8
        string utf8 = converter.to_bytes(utf32);

        // Output the UTF-8 representation
        // cout << "UTF-8 representation: ";
        for (unsigned char c : utf8) {
            ostringstream hexstring;
            int hexValue = static_cast<int>(c) + byteshift; // add byteshift
            hexstring << hex << std::setfill('0') << std::setw(2) << hexValue;
            tmp += hexstring.str(); // add hexsymbol to hexstring
        }
    }

    return tmp;
}

string DecryptText(string EncrytpedText, string EKey){
    return "In develop!";
}

int main() {
    string text;
    getline(cin, text);
    cout << EncryptText(text);
    return 0;
}
